@model AllPrecastOrdersQueryModel

@{
	ViewBag.Title = "Orders";
	int precastId = ViewBag.PrecastId;
}
@{
	var previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}

	var maxPage = Math.Ceiling((double)Model.TotalOrders /
		AllPrecastOrdersQueryModel.OrdersPerPage);
}

<div class="row mb-5">
	<div class="col-sm-6 d-grid gap-2 d-sm-flex justify-content-sm-start">
		<a class="btn btn-secondary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-controller="Order"
		   asp-action="ForPrecast"
		   asp-route-currentPage="@previousPage"><<</a>
	</div>

	@{
		var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
		!Model.Orders.Any();
	}

	<div class="col-sm-6 d-grid gap-2 d-sm-flex justify-content-sm-end">
		<a class="btn btn-secondary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="Order"
		   asp-action="ForPrecast"
		   asp-route-currentPage="@(Model.CurrentPage + 1)">>></a>
	</div>
</div>

@if (!Model.Orders.Any())
{
	<h2 class="text-center">No orders found by the given criteria!</h2>
}

<partial name="_OrdersPartial" model=@Model.Orders />

<a asp-controller="Precast" asp-action="Reinforce" asp-route-id="@precastId" class="card-link">Back to precast</a></td>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
}
