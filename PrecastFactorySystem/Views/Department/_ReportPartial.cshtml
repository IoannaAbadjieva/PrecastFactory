@model IEnumerable<ReportInfoViewModel>

@{
	var query = Model.GroupBy(m => m.Department, (key, group) => new
	{
		department = key,
		projects = group.ToArray()
					.GroupBy(m => m.ProjectName, (key, group) => new
					{
						projectName = key,
						types = group.ToArray()
						.GroupBy(m => m.PrecastType, (key, group) => new
						{
							type = key,
							precast = group.ToArray()
						})
					})
	});
}
@foreach (var department in query)
{
	
	<h4>@department.department</h4>
	<hr />
	<table class="table table-hover table-borderless">
		<thead>
			<tr>
				<th scope="col"></th>
				<th scope="col"></th>
				<th scope="col">Precast</th>
				<th scope="col">Count</th>
				<th scope="col">ReinforceWeight</th>
				<th scope="col">Total kg</th>
				<th scope="col">ConcreteAmount</th>
				<th scope="col">Total m3</th>
			</tr>
		</thead>
		<tbody class="table-group-divider">
			@foreach (var project in department.projects)
			{
				<tr>
					<td>@project.projectName</td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
				@foreach (var type in project.types)
				{
					<tr>
						<td></td>
						<td>@type.type</td>
						<td></td>
						<td></td>
						<td></td>
						<td></td>
						<td></td>
					</tr>
					@foreach (var precast in type.precast)
					{
						<tr>
							<td></td>
							<td></td>
							<td>@precast.PrecastName</td>
							<td>@precast.Count</td>
							<td>@precast.ReinforceWeight.ToString("f2")</td>
							<td>@precast.Reinforcement.ToString("f2")</td>
							<td>@precast.ConcreteAmount.ToString("f2")</td>
							<td>@precast.Concrete.ToString("f2")</td>
						</tr>
					}
				}
			}
		</tbody>
	</table>
}
