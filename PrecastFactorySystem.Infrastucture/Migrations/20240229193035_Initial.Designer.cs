// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrecastFactorySystem.Data;

#nullable disable

namespace PrecastFactorySystem.Data.Migrations
{
    [DbContext(typeof(PrecastFactoryDbContext))]
    [Migration("20240229193035_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.ConcreteClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompressiveStrengthRequired")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ConcreteClasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompressiveStrengthRequired = 8,
                            Name = "C 6/8"
                        },
                        new
                        {
                            Id = 2,
                            CompressiveStrengthRequired = 10,
                            Name = "C 8/10"
                        },
                        new
                        {
                            Id = 3,
                            CompressiveStrengthRequired = 12,
                            Name = "C 10/12"
                        },
                        new
                        {
                            Id = 4,
                            CompressiveStrengthRequired = 15,
                            Name = "C 12/15"
                        },
                        new
                        {
                            Id = 5,
                            CompressiveStrengthRequired = 20,
                            Name = "C 16/20"
                        },
                        new
                        {
                            Id = 6,
                            CompressiveStrengthRequired = 25,
                            Name = "C 20/25"
                        },
                        new
                        {
                            Id = 7,
                            CompressiveStrengthRequired = 30,
                            Name = "C 25/30"
                        },
                        new
                        {
                            Id = 8,
                            CompressiveStrengthRequired = 35,
                            Name = "C 28/35"
                        },
                        new
                        {
                            Id = 9,
                            CompressiveStrengthRequired = 37,
                            Name = "C 30/37"
                        },
                        new
                        {
                            Id = 10,
                            CompressiveStrengthRequired = 40,
                            Name = "C 32/40"
                        },
                        new
                        {
                            Id = 11,
                            CompressiveStrengthRequired = 45,
                            Name = "C 35/45"
                        },
                        new
                        {
                            Id = 12,
                            CompressiveStrengthRequired = 55,
                            Name = "C 40/50"
                        },
                        new
                        {
                            Id = 13,
                            CompressiveStrengthRequired = 55,
                            Name = "C 45/55"
                        },
                        new
                        {
                            Id = 14,
                            CompressiveStrengthRequired = 60,
                            Name = "C 50/60"
                        });
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.Deliverer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Deliverers");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentType = 0,
                            Name = "1-st Precast"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentType = 0,
                            Name = "2-nd Precast"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentType = 0,
                            Name = "3-rd Precast"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentType = 0,
                            Name = "Reinforce"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentType = 0,
                            Name = "Mould"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentType = 0,
                            Name = "EmbeddedParts"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentType = 1,
                            Name = "Management"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentType = 1,
                            Name = "ProjectTechnical"
                        });
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.DepartmentEmployee", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeetId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DepartmentId", "EmployeetId");

                    b.HasIndex("EmployeetId");

                    b.ToTable("DepartmentsEmployees");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.Precast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ConcreteClassId")
                        .HasColumnType("int");

                    b.Property<decimal>("ConcreteProjectAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PrecastTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReinforceProjectWeight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ConcreteClassId");

                    b.HasIndex("PrecastTypeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Precast");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.PrecastDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("ConcreteAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("PrecastId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PrecastId");

                    b.ToTable("DepartmentsPrecast");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.PrecastReinforce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PrecastId")
                        .HasColumnType("int");

                    b.Property<int>("ReinforceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrecastId");

                    b.HasIndex("ReinforceTypeId");

                    b.ToTable("PrecastReinforce");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.PrecastReinforceOrder", b =>
                {
                    b.Property<int>("PrecastId")
                        .HasColumnType("int");

                    b.Property<int>("ReinforceOrderId")
                        .HasColumnType("int");

                    b.HasKey("PrecastId", "ReinforceOrderId");

                    b.HasIndex("ReinforceOrderId");

                    b.ToTable("PrecastReinforceOrders");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.PrecastType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PrecastReinforceType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PrecastTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Foundations",
                            PrecastReinforceType = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Column",
                            PrecastReinforceType = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Main Beam",
                            PrecastReinforceType = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Prestressed Main Beam",
                            PrecastReinforceType = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Secondary Beam",
                            PrecastReinforceType = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Prestressed Secondary Beam",
                            PrecastReinforceType = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Purlin",
                            PrecastReinforceType = 1
                        },
                        new
                        {
                            Id = 8,
                            Name = "Prestressed Purlin",
                            PrecastReinforceType = 2
                        },
                        new
                        {
                            Id = 9,
                            Name = "Panel",
                            PrecastReinforceType = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "Hollow Core Slab",
                            PrecastReinforceType = 3
                        },
                        new
                        {
                            Id = 11,
                            Name = "Production Use",
                            PrecastReinforceType = 1
                        },
                        new
                        {
                            Id = 12,
                            Name = "Other",
                            PrecastReinforceType = 1
                        });
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.ReinforceOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliverDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DelivererId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrecastWeight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DelivererId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("ReinforceOrders");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.ReinforceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Diameter")
                        .HasColumnType("int");

                    b.Property<int>("ReinforceClass")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReinforceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Diameter = 6,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 2,
                            Diameter = 8,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 3,
                            Diameter = 10,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 4,
                            Diameter = 12,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 5,
                            Diameter = 14,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 6,
                            Diameter = 16,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 7,
                            Diameter = 18,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 8,
                            Diameter = 20,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 9,
                            Diameter = 22,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 10,
                            Diameter = 25,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 11,
                            Diameter = 28,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 12,
                            Diameter = 32,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 13,
                            Diameter = 36,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 14,
                            Diameter = 40,
                            ReinforceClass = 0
                        },
                        new
                        {
                            Id = 15,
                            Diameter = 6,
                            ReinforceClass = 1
                        },
                        new
                        {
                            Id = 16,
                            Diameter = 8,
                            ReinforceClass = 1
                        },
                        new
                        {
                            Id = 17,
                            Diameter = 10,
                            ReinforceClass = 1
                        },
                        new
                        {
                            Id = 18,
                            Diameter = 12,
                            ReinforceClass = 1
                        },
                        new
                        {
                            Id = 19,
                            Diameter = 14,
                            ReinforceClass = 1
                        },
                        new
                        {
                            Id = 20,
                            Diameter = 16,
                            ReinforceClass = 1
                        },
                        new
                        {
                            Id = 21,
                            Diameter = 18,
                            ReinforceClass = 1
                        },
                        new
                        {
                            Id = 22,
                            Diameter = 20,
                            ReinforceClass = 1
                        },
                        new
                        {
                            Id = 23,
                            Diameter = 22,
                            ReinforceClass = 1
                        },
                        new
                        {
                            Id = 24,
                            Diameter = 25,
                            ReinforceClass = 1
                        },
                        new
                        {
                            Id = 25,
                            Diameter = 28,
                            ReinforceClass = 1
                        },
                        new
                        {
                            Id = 26,
                            Diameter = 32,
                            ReinforceClass = 1
                        },
                        new
                        {
                            Id = 27,
                            Diameter = 36,
                            ReinforceClass = 1
                        },
                        new
                        {
                            Id = 28,
                            Diameter = 40,
                            ReinforceClass = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.DepartmentEmployee", b =>
                {
                    b.HasOne("PrecastFactorySystem.Data.Models.Department", "Department")
                        .WithMany("DepartmentEmployees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.Precast", b =>
                {
                    b.HasOne("PrecastFactorySystem.Data.Models.ConcreteClass", "ConcreteClass")
                        .WithMany()
                        .HasForeignKey("ConcreteClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrecastFactorySystem.Data.Models.PrecastType", "PrecastType")
                        .WithMany()
                        .HasForeignKey("PrecastTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrecastFactorySystem.Data.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConcreteClass");

                    b.Navigation("PrecastType");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.PrecastDepartment", b =>
                {
                    b.HasOne("PrecastFactorySystem.Data.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrecastFactorySystem.Data.Models.Precast", "Precast")
                        .WithMany()
                        .HasForeignKey("PrecastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Precast");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.PrecastReinforce", b =>
                {
                    b.HasOne("PrecastFactorySystem.Data.Models.Precast", "Precast")
                        .WithMany()
                        .HasForeignKey("PrecastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrecastFactorySystem.Data.Models.ReinforceType", "ReinforceType")
                        .WithMany()
                        .HasForeignKey("ReinforceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Precast");

                    b.Navigation("ReinforceType");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.PrecastReinforceOrder", b =>
                {
                    b.HasOne("PrecastFactorySystem.Data.Models.Precast", "Precast")
                        .WithMany("PrecastReinforceOrders")
                        .HasForeignKey("PrecastId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrecastFactorySystem.Data.Models.ReinforceOrder", "ReinforceOrder")
                        .WithMany()
                        .HasForeignKey("ReinforceOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Precast");

                    b.Navigation("ReinforceOrder");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.ReinforceOrder", b =>
                {
                    b.HasOne("PrecastFactorySystem.Data.Models.Deliverer", "Deliverer")
                        .WithMany()
                        .HasForeignKey("DelivererId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrecastFactorySystem.Data.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deliverer");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.Department", b =>
                {
                    b.Navigation("DepartmentEmployees");
                });

            modelBuilder.Entity("PrecastFactorySystem.Data.Models.Precast", b =>
                {
                    b.Navigation("PrecastReinforceOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
